{"version":3,"sources":["components/HomePage/SearchResults/index.js","components/HomePage/index.js","components/Details/index.js","App.js","serviceWorker.js","index.js"],"names":["SearchResults","props","history","useHistory","displayRating","item","n","max","emptyStars","Math","ceil","stars","Number","floor","i","push","color","j","Restaurants","restaurantsList","map","key","Card","className","height","Img","variant","src","image_url","Body","style","Title","name","Text","addresses","address1","city","state","zip_code","displayAddress","location","price","prices","length","displayPrice","rating","href","phone","display_phone","Button","onClick","detailsObject","restaurantDetails","margin","Container","Row","anywhere","API_KEY","MyVerticallyCenteredModal","Modal","size","aria-labelledby","centered","Header","closeButton","id","Footer","onHide","HomePage","useState","restaurant","setRestaurant","setLocation","setRestaurantsList","setGeoLocation","check1","check2","check3","check4","priceFilter","modalShow","setModalShow","onChangePrice","event","filter","target","checked","console","log","width","marginTop","marginLeft","marginRight","Col","Form","Group","controlId","Label","InputGroup","Prepend","Control","onChange","value","placeholder","Checkbox","aria-label","axios","get","headers","Authorization","then","res","data","businesses","catch","err","geo","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","show","GoogleApiWrapper","apiKey","useLocation","showingInfoWindow","setShowInfoWindow","activeMarker","setActiveMarker","setSelectedPlace","useEffect","Cuisines","categories","title","ImageSlide","photos","Carousel","Item","overflow","alt","backgroundPosition","mapStyles2","timeConvert","time","formatedTime","toString","match","padding","google","containerStyle","zoom","initialCenter","lat","coordinates","lng","marker","e","visible","onClose","Tabs","defaultActiveKey","Tab","eventKey","review_count","rel","url","hourList","day","hours","open","start","end","Table","striped","bordered","hover","displayHours","App","path","Boolean","window","hostname","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.fdaf01fe.chunk.js","sourcesContent":["// The component that appears when you click 'Submit' on the main page.\r\n\r\nimport React, { } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Button, Card, Container, Row } from 'react-bootstrap';\r\nimport { IoIosStarHalf, IoIosStarOutline, IoIosStar } from 'react-icons/io';\r\nimport { FaDollarSign } from 'react-icons/fa';\r\nimport { MdLocalPhone, MdLocationOn } from 'react-icons/md';\r\nimport './style.css';\r\n\r\nconst SearchResults = (props) => {\r\n    let history = useHistory();\r\n    \r\n    function restaurantDetails(item) {\r\n        history.push('/details', {\r\n            // Link to /details and pass in detailsObject as a prop, which contains item\r\n            detailsObject: item\r\n        });\r\n    }\r\n\r\n    function isFloat(n) {\r\n        return Number(n) === n && n % 1 !== 0;\r\n      }\r\n    \r\n      /* Function that takes the rating and converts it to stars.\r\n         Accounts for if the rating is between a whole number and that plus 0.5,\r\n         but may not be necessary for the Yelp API.\r\n      */\r\n     const displayRating = (item) => {\r\n        const max = item;\r\n        const emptyStars = 5 - Math.ceil(max);\r\n        let stars = [];\r\n        if (isFloat(max)) {\r\n          const floor = Math.floor(max);\r\n          for (let i = 1; i <= floor; i++) {\r\n            stars.push(<IoIosStar color=\"orange\" />);\r\n          }\r\n          stars.push(<IoIosStarHalf color=\"orange\" />);\r\n        } else {\r\n          for (let i = 1; i <= max; i++) {\r\n            stars.push(<IoIosStar color=\"orange\" />);\r\n          }\r\n        }\r\n    \r\n        let j = 1;\r\n        while (j <= emptyStars) {\r\n          stars.push(<IoIosStarOutline color=\"orange\" />);\r\n          j++;\r\n        }\r\n        return stars;\r\n      }\r\n\r\n      const displayPrice = (item, key) => {\r\n        const price = item;\r\n        let prices = [];\r\n        if (price != null) {\r\n          prices.push(<span key={key}>Price: </span>);\r\n          for (let i = 0; i < price.length; i++) {\r\n            prices.push(<FaDollarSign color=\"green\" />);\r\n          }\r\n        }\r\n        return prices;\r\n      }\r\n\r\n      const displayAddress = (item, key) => {\r\n          let addresses = [];\r\n          addresses.push(<MdLocationOn color=\"#e53935\" />);\r\n        if (item.address1 && item.address1 !== \"\") {\r\n            addresses.push(` ${item.address1}, `)\r\n        }\r\n        addresses.push(`${item.city}, ${item.state} ${item.zip_code}`);\r\n        return addresses;\r\n      }\r\n    // Map function to loop through the array of items and displays a card for each restaurant\r\n    let Restaurants = props.restaurantsList.map((item, key) =>\r\n        <Card key={key} className=\"card-margin\" height=\"300\">\r\n            <Card.Img variant=\"top\" src={item.image_url} height=\"250\" />\r\n            <Card.Body style={{\r\n                height: '240'\r\n            }}>\r\n                <Card.Title>{item.name}</Card.Title>\r\n                <Card.Text>\r\n                    {/* If item does not have address1, don't display it  */}\r\n                    {displayAddress(item.location)}\r\n                </Card.Text>\r\n                <Card.Text>{displayPrice(item.price, key)}</Card.Text>\r\n                <Card.Text>Rating: {displayRating(item.rating)}</Card.Text>\r\n                <Card.Text><MdLocalPhone color=\"#e53935\" />&nbsp;<a href={`tel:${item.phone}`}>{item.display_phone}</a></Card.Text>\r\n                {/* Make sure in most cases that the button will align \r\n                to the bottom and won't cover up phone number */}\r\n            </Card.Body>\r\n            <Button onClick={\r\n                () => {\r\n                    restaurantDetails(item);\r\n                }} variant=\"success\" style={{\r\n                    margin: '4px'\r\n                }}>More information</Button>\r\n        </Card>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <br />\r\n            <Container>\r\n                {/* Center row */}\r\n                <Row className=\"justify-content-md-center\">\r\n                    {/* The cards that will display the restaurant information */}\r\n                    {Restaurants}\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchResults;","// The component for the home page.\r\n// Loading screen\r\n// Search for one restaurant - don't show others\r\n// Instructions\r\n// Geolocation only if press button\r\nimport axios from 'axios';\r\nimport './style.css';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Button, Card, Col, Container, Form, FormControl, InputGroup, Modal, Row } from 'react-bootstrap';\r\nimport SearchResults from './SearchResults';\r\nimport { MdLocationCity, MdRestaurant } from \"react-icons/md\";\r\n\r\nconst anywhere = 'https://cors-anywhere.herokuapp.com/';\r\n\r\n// Enter your own Yelp Fusion API key here\r\nconst API_KEY = 'n4723HjFL6HV_NnAtILXkWEOstIKOV_Z7A6hpvtqsej5ivj7mWpHALmE8IDyimva1SElkUAnK4XNUa1qzRLQv7xaj3a2crW1jfP-1eteel6v9JaQcO838gpwXcRhXnYx';\r\n\r\nfunction MyVerticallyCenteredModal(props) {\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Cannot find user location\r\n          </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <p>\r\n                    Make sure your browser supports HTML5 Geolocation and that the Location permission is set to 'Allow' for this site.\r\n          </p>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"danger\" onClick={props.onHide}>Close</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}\r\n\r\n// Function for the homepage\r\nconst HomePage = (props) => {\r\n    // Define states\r\n    let [restaurant, setRestaurant] = useState(\"\");\r\n    let [location, setLocation] = useState(\"\");\r\n    let [restaurantsList, setRestaurantsList] = useState([]);\r\n    let [geoLocation, setGeoLocation] = useState({});\r\n    const [priceFilter, setPriceFilter ] = useState({ check1: 0, check2: 0, check3: 0, check4: 0 });\r\n    const [modalShow, setModalShow] = useState(false);\r\n\r\n    let getLocation = () => {\r\n        const geo = navigator.geolocation;\r\n        if (!geo) {\r\n            console.log(\"Location API is not supported/available\");\r\n        } else {\r\n            geo.getCurrentPosition((position) => {\r\n                // success callback\r\n                console.log(\"Location: \", position.coords.latitude, position.coords.longitude);\r\n                setGeoLocation(position.coords);\r\n                axios.get(`${anywhere}https://api.yelp.com/v3/businesses/search?term=${restaurant}&categories=food&latitude=${position.coords.latitude}&longitude=${position.coords.longitude}&radius=15000`, {\r\n                    headers: {\r\n                        Authorization: `Bearer ${API_KEY}`\r\n                    }\r\n                }).then((res) => {\r\n                    // Set business array in restaurantsList state\r\n                    setRestaurantsList(res.data.businesses);\r\n                }).catch((err) => {\r\n                    // Otherwise catch error and log it to console\r\n                    console.log(\"Error occured: \", err);\r\n                })\r\n            }, (err) => {\r\n                setModalShow(true);\r\n            })\r\n        }\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     getLocation();\r\n    // }, []);\r\n\r\n    // Set the restaurant text in the restaurant state\r\n    const onChangeRestaurant = (event) => {\r\n        setRestaurant(event.target.value);\r\n    }\r\n\r\n    // Set the location text in the location state\r\n    const onChangeLocation = (event) => {\r\n        setLocation(event.target.value);\r\n    }\r\n\r\n    const onChangePrice = (event) => {\r\n        let filter = priceFilter;\r\n        filter.check1 = event.target.checked;\r\n        filter.check2 = event.target.checked;\r\n        filter.check3 = event.target.checked;\r\n        filter.check4 = event.target.checked;\r\n        console.log(event);\r\n    }\r\n\r\n    const searchRestaurant = (event) => {\r\n        // Send a GET request to the Yelp API and filter businesses to food\r\n        axios.get(`${anywhere}https://api.yelp.com/v3/businesses/search?term=${restaurant}&categories=food&location=${location}`, {\r\n            headers: {\r\n                Authorization: `Bearer ${API_KEY}`\r\n            }\r\n        }).then((res) => {\r\n            // Set business array in restaurantsList state\r\n            setRestaurantsList(res.data.businesses);\r\n        }).catch((err) => {\r\n            // Otherwise catch error and log it to console\r\n            console.log(\"Error occured: \", err);\r\n        })\r\n    }\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <Card className=\"justify-content-md-center\" style={{\r\n                    width: '75%',\r\n                    marginTop: '16px',\r\n                    marginLeft: 'auto',\r\n                    marginRight: 'auto'\r\n                }}>\r\n                    <Card.Body>\r\n                        <Row className=\"justify-content-md-center\">\r\n\r\n                            <Col>\r\n                                <h1><center>Restaurant Searcher</center></h1>\r\n                                <p>Enter the restaurant type/name and location and click Submit, or enter just the restaurant and click Submit with Your Location.</p>\r\n                                {/* Form for entering Restaurant Name and Location */}\r\n                                <Form>\r\n                                    <Form.Group controlId=\"basic\">\r\n                                        <Form.Label>Enter Restaurant Name/Type</Form.Label>\r\n                                        {/* When Form text changes, call onChangeRestaurant() */}\r\n                                        <InputGroup>\r\n                                            <InputGroup.Prepend>\r\n                                                <InputGroup.Text id=\"inputGroupPrepend\"><MdRestaurant /></InputGroup.Text>\r\n                                            </InputGroup.Prepend>\r\n                                            <Form.Control onChange={onChangeRestaurant} placeholder=\"Restaurant\" />\r\n                                        </InputGroup>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId=\"basic\">\r\n                                        <Form.Label>Enter Location</Form.Label>\r\n                                        {/* When Form text changes, call onChangeLocation() */}\r\n                                        <InputGroup>\r\n                                            <InputGroup.Prepend>\r\n                                                <InputGroup.Text id=\"inputGroupPrepend\"><MdLocationCity /></InputGroup.Text>\r\n                                            </InputGroup.Prepend>\r\n                                            <Form.Control onChange={onChangeLocation} placeholder=\"Location (i.e. Atlanta, GA)\" />\r\n                                        </InputGroup>\r\n                                    </Form.Group>\r\n                                </Form>\r\n\r\n                            </Col>\r\n\r\n                        </Row>\r\n                        <Row style={{\r\n                            marginTop: '4px'\r\n                        }}>\r\n                            <Col>\r\n                                <p>Check the price range boxes to filter the search results.</p>\r\n                                <InputGroup className=\"mb-3\">\r\n                                    <InputGroup.Prepend style={{\r\n                                        marginRight: '16px',\r\n                                    }}>\r\n                                        <InputGroup.Text>\r\n                                            $\r\n                                </InputGroup.Text>\r\n                                        <InputGroup.Checkbox onChange={onChangePrice} aria-label=\"Checkbox for following text input\" />\r\n                                    </InputGroup.Prepend>\r\n\r\n                                    <InputGroup.Prepend style={{\r\n                                        marginRight: '16px',\r\n                                    }}>\r\n                                        <InputGroup.Text>\r\n                                            $$\r\n                                </InputGroup.Text>\r\n                                        <InputGroup.Checkbox onChange={onChangePrice} aria-label=\"Checkbox for following text input\" />\r\n                                        {/* <Form.Check label=\"label\" type=\"checkbox\" /> */}\r\n                                    </InputGroup.Prepend>\r\n\r\n                                    <InputGroup.Prepend style={{\r\n                                        marginRight: '16px',\r\n                                    }}>\r\n                                        <InputGroup.Text>\r\n                                            $$$\r\n                                </InputGroup.Text>\r\n                                        <InputGroup.Checkbox onChange={onChangePrice} aria-label=\"Checkbox for following text input\" />\r\n                                        {/* <Form.Check label=\"label\" type=\"checkbox\" /> */}\r\n                                    </InputGroup.Prepend>\r\n\r\n                                    <InputGroup.Prepend style={{\r\n                                        marginRight: '16px',\r\n                                    }}>\r\n                                        <InputGroup.Text>\r\n                                            $$$$\r\n                                </InputGroup.Text>\r\n                                        <InputGroup.Checkbox onChange={onChangePrice} aria-label=\"Checkbox for following text input\" />\r\n                                        {/* <Form.Check label=\"label\" type=\"checkbox\" /> */}\r\n                                    </InputGroup.Prepend>\r\n                                </InputGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        {/* When button is pressed, call searchRestaurant() */}\r\n                        <Button variant=\"dark\" onClick={searchRestaurant}>Submit</Button>\r\n                        <Button variant=\"dark\" onClick={getLocation} className=\"float-right\">Submit with Your Location</Button>\r\n                        <MyVerticallyCenteredModal\r\n                            show={modalShow}\r\n                            onHide={() => setModalShow(false)}\r\n                        />\r\n                    </Card.Body>\r\n                </Card>\r\n                {/* If restaurantsList length > 0, show SearchResults component, otherwise don't show */}\r\n                {restaurantsList.length > 0 ? <SearchResults restaurantsList={restaurantsList} /> : null}\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomePage;","// The component for when you click 'More information' on a specific restaurant.\r\n/* \r\n// Put all the details from business in the Details page\r\n// Add the Star ratings and Price, address, location icons to the Search Results Cards\r\n// Add the Input fields for the filters. \r\n*/\r\n\r\nimport axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Button, Card, Carousel, Container, Row, Tab, Table, Tabs } from 'react-bootstrap';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { GoogleApiWrapper, InfoWindow, Marker, Map } from 'google-maps-react';\r\nimport { IoIosStarHalf, IoIosStarOutline, IoIosStar } from 'react-icons/io';\r\nimport { FaDollarSign } from 'react-icons/fa';\r\nimport { MdLocalPhone, MdLocationOn } from 'react-icons/md';\r\n\r\n\r\nconst anywhere = 'https://cors-anywhere.herokuapp.com/';\r\n\r\n// Enter your own Yelp Fusion API key here\r\nconst YELP_API_KEY = 'n4723HjFL6HV_NnAtILXkWEOstIKOV_Z7A6hpvtqsej5ivj7mWpHALmE8IDyimva1SElkUAnK4XNUa1qzRLQv7xaj3a2crW1jfP-1eteel6v9JaQcO838gpwXcRhXnYx';\r\n\r\n// Enter your own Google Maps API key here\r\nconst MAPS_API_KEY = 'AIzaSyBKkqON7yV0e9pLsxgZeoR8l917lbOEOrU';\r\n\r\nconst Details = (props) => {\r\n\r\n  // Create location object\r\n  let location = useLocation();\r\n  // Restaurant is the prop of location.state - contains the specific restaurant that was clicked on  \r\n  let [restaurant, setRestaurant] = useState(location.state.detailsObject);\r\n  let [showingInfoWindow, setShowInfoWindow] = useState(false); //Hides or the shows the infoWindow\r\n  let [activeMarker, setActiveMarker] = useState({}); //Shows the active marker upon click\r\n  let [selectedPlace, setSelectedPlace] = useState({}); //Shows the infoWindow to the selected place upon a marker\r\n\r\n\r\n  useEffect(() => {\r\n    axios.get(`${anywhere}https://api.yelp.com/v3/businesses/${restaurant.id}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${YELP_API_KEY}`\r\n      }\r\n    }).then((res) => {\r\n      // Set business array in restaurant state\r\n      console.log(\"Restaurant data: \", res.data);\r\n      setRestaurant(res.data);\r\n    }).catch((err) => {\r\n      // Otherwise catch error and log it to console\r\n      console.log(\"Error occured: \", err);\r\n    })\r\n  }, []);\r\n\r\n  // Map function to loop through sub-array categories to find type of cuisines\r\n  let Cuisines = restaurant.categories.map((item, key) =>\r\n    <span key={key}>{item.title}, </span>\r\n  );\r\n\r\n  // make sure photos exist before get request\r\n  let ImageSlide = restaurant.photos && restaurant.photos.map((item, key) =>\r\n    <Carousel.Item>\r\n      <div style={{\r\n        overflow: 'hidden',\r\n        height: '400px'\r\n\r\n      }}>\r\n        <img\r\n          className=\"d-block w-100\"\r\n          src={item}\r\n          alt=\"Restaurant\"\r\n          key={key}\r\n          style={{\r\n            backgroundPosition: 'center center'\r\n          }}\r\n        />\r\n      </div>\r\n    </Carousel.Item>\r\n  );\r\n\r\n  const onMarkerClick = (props, marker, e) => {\r\n    setSelectedPlace(props);\r\n    setActiveMarker(marker);\r\n    setShowInfoWindow(true);\r\n  }\r\n\r\n  const onClose = props => {\r\n    if (showingInfoWindow) {\r\n      setActiveMarker(null);\r\n      setShowInfoWindow(false);\r\n    }\r\n  };\r\n\r\n  const mapStyles2 = {\r\n    width: '100%',\r\n    height: \"400px\",\r\n    position: \"relative\"\r\n  };\r\n\r\n  function isFloat(n) {\r\n    return Number(n) === n && n % 1 !== 0;\r\n  }\r\n\r\n  /* Function that takes the rating and converts it to stars.\r\n     Accounts for if the rating is between a whole number and that plus 0.5,\r\n     but may not be necessary for the Yelp API.\r\n  */\r\n  const displayRating = () => {\r\n    const max = restaurant.rating;\r\n    const emptyStars = 5 - Math.ceil(max);\r\n    let stars = [];\r\n    if (isFloat(max)) {\r\n      const floor = Math.floor(max);\r\n      for (let i = 1; i <= floor; i++) {\r\n        stars.push(<IoIosStar color=\"orange\" />);\r\n      }\r\n      stars.push(<IoIosStarHalf color=\"orange\" />);\r\n    } else {\r\n      for (let i = 1; i <= max; i++) {\r\n        stars.push(<IoIosStar color=\"orange\" />);\r\n      }\r\n    }\r\n\r\n    let j = 1;\r\n    while (j <= emptyStars) {\r\n      stars.push(<IoIosStarOutline color=\"orange\" />);\r\n      j++;\r\n    }\r\n    return stars;\r\n  }\r\n\r\n  let displayHours = () => {\r\n    let hourList = [];\r\n    let day = \"\";\r\n    if (restaurant.hours && restaurant.hours[0].open) {\r\n      const hours = restaurant.hours[0].open;\r\n      if ((hours.filter(item => item.day === 0)).length > 0) {\r\n        // checking the day\r\n        day = hours.filter(item => item.day === 0);\r\n        hourList.push(\r\n          <tr>\r\n            <td>Monday</td>\r\n            <td>{timeConvert(day[0].start)} - {timeConvert(day[0].end)}</td>\r\n          </tr>\r\n        );\r\n      } else {\r\n        hourList.push(\r\n          <tr>\r\n            <td>Monday</td>\r\n            <td style={{\r\n              color: 'red'\r\n            }}>Closed</td>\r\n          </tr>\r\n        );\r\n      }\r\n      if ((hours.filter(item => item.day === 1)).length > 0) {\r\n        day = hours.filter(item => item.day === 1);\r\n        hourList.push(\r\n          <tr>\r\n            <td>Tuesday</td>\r\n            <td>{timeConvert(day[0].start)} - {timeConvert(day[0].end)}</td>\r\n          </tr>\r\n        );\r\n      } else {\r\n        hourList.push(\r\n          <tr>\r\n            <td>Tuesday</td>\r\n            <td style={{\r\n              color: 'red'\r\n            }}>Closed</td>\r\n          </tr>\r\n        );\r\n      }\r\n      if ((hours.filter(item => item.day === 2)).length > 0) {\r\n        day = hours.filter(item => item.day === 2);\r\n        hourList.push(\r\n          <tr>\r\n            <td>Wednesday</td>\r\n            <td>{timeConvert(day[0].start)} - {timeConvert(day[0].end)}</td>\r\n          </tr>\r\n        );\r\n      } else {\r\n        hourList.push(\r\n          <tr>\r\n            <td>Wednesday</td>\r\n            <td style={{\r\n              color: 'red'\r\n            }}>Closed</td>\r\n          </tr>\r\n        );\r\n      }\r\n      if ((hours.filter(item => item.day === 3)).length > 0) {\r\n        day = hours.filter(item => item.day === 3);\r\n        hourList.push(\r\n          <tr>\r\n            <td>Thursday</td>\r\n            <td>{timeConvert(day[0].start)} - {timeConvert(day[0].end)}</td>\r\n          </tr>\r\n        );\r\n      } else {\r\n        hourList.push(\r\n          <tr>\r\n            <td>Thursday</td>\r\n            <td style={{\r\n              color: 'red'\r\n            }}>Closed</td>\r\n          </tr>\r\n        );\r\n      }\r\n      if ((hours.filter(item => item.day === 4)).length > 0) {\r\n        day = hours.filter(item => item.day === 4);\r\n        hourList.push(\r\n          <tr>\r\n            <td>Friday</td>\r\n            <td>{timeConvert(day[0].start)} - {timeConvert(day[0].end)}</td>\r\n          </tr>\r\n        );\r\n      } else {\r\n        hourList.push(\r\n          <tr>\r\n            <td>Friday</td>\r\n            <td style={{\r\n              color: 'red'\r\n            }}>Closed</td>\r\n          </tr>\r\n        );\r\n      }\r\n      if ((hours.filter(item => item.day === 5)).length > 0) {\r\n        day = hours.filter(item => item.day === 5);\r\n        hourList.push(\r\n          <tr>\r\n            <td>Saturday</td>\r\n            <td>{timeConvert(day[0].start)} - {timeConvert(day[0].end)}</td>\r\n          </tr>\r\n        );\r\n      } else {\r\n        hourList.push(\r\n          <tr>\r\n            <td>Saturday</td>\r\n            <td style={{\r\n              color: 'red'\r\n            }}>Closed</td>\r\n          </tr>\r\n        );\r\n      }\r\n      if ((hours.filter(item => item.day === 6)).length > 0) {\r\n        day = hours.filter(item => item.day === 6);\r\n        hourList.push(\r\n          <tr>\r\n            <td>Sunday</td>\r\n            <td>{timeConvert(day[0].start)} - {timeConvert(day[0].end)}</td>\r\n          </tr>\r\n        );\r\n      } else {\r\n        hourList.push(\r\n          <tr>\r\n            <td>Sunday</td>\r\n            <td style={{\r\n              color: 'red'\r\n            }}>Closed</td>\r\n          </tr>\r\n        );\r\n      }\r\n    }\r\n    return (\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>Day</th>\r\n            <th>Hours</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {hourList}\r\n        </tbody>\r\n      </Table>\r\n    );\r\n  };\r\n\r\n  const timeConvert = (time) => {\r\n    // Check correct time format and split into components\r\n    time = time.toString().match(/^([01]\\d|2[0-3])([0-5]\\d)/);\r\n    let formatedTime = '';\r\n    if (time.length > 1) { // If time format correct\r\n      formatedTime = (time[1] % 12 || 12) + \":\" + time[2] + (time[1] < 12 ? ' AM' : ' PM')\r\n    }\r\n    return formatedTime; // return adjusted time or original string\r\n  }\r\n\r\n  const displayPrice = () => {\r\n    const price = restaurant.price;\r\n    let prices = [];\r\n    if (price != null) {\r\n      prices.push(<span>Price: </span>);\r\n      for (let i = 0; i < price.length; i++) {\r\n        prices.push(<FaDollarSign color=\"green\" />);\r\n      }\r\n    }\r\n    return prices;\r\n  }\r\n\r\n  // Actual return of Details component\r\n  return (\r\n    <div>\r\n      <Container>\r\n        {/* Restaurant Images */}\r\n        <Row className=\"justify-content-md-center\">\r\n          <Card style={{\r\n            width: '100%'\r\n          }}>\r\n            <Card.Body style={{\r\n              padding: '0.5rem'\r\n            }}>\r\n              <Carousel>{ImageSlide}</Carousel>\r\n            </Card.Body>\r\n          </Card>\r\n        </Row>\r\n        <br />\r\n\r\n        {/* Google Maps */}\r\n        <Row className=\"justify-content-md-center\">\r\n          <Card style={{\r\n            width: '100%'\r\n          }}>\r\n            <Card.Header>\r\n              <center><h1>{restaurant.name}</h1></center>\r\n            </Card.Header>\r\n            <Card.Body style={{\r\n              padding: '0rem'\r\n            }}>\r\n              <Map\r\n                google={props.google}\r\n                style={mapStyles2}\r\n                containerStyle={mapStyles2}\r\n                zoom={20}\r\n                initialCenter={{\r\n                  lat: restaurant.coordinates.latitude,\r\n                  lng: restaurant.coordinates.longitude\r\n                }}\r\n              >\r\n                <Marker\r\n                  title={`${restaurant.name}`} //mouse over\r\n                  name={`${restaurant.name}`}\r\n                  onClick={onMarkerClick}\r\n                  position={{ lat: restaurant.coordinates.latitude, lng: restaurant.coordinates.longitude }}\r\n                />\r\n                <InfoWindow\r\n                  marker={activeMarker}\r\n                  visible={showingInfoWindow}\r\n                  onClose={onClose}\r\n                >\r\n                  <h4>{restaurant.name}</h4>\r\n\r\n                </InfoWindow>\r\n              </Map>\r\n            </Card.Body>\r\n          </Card>\r\n        </Row>\r\n\r\n        <Row style={{\r\n          marginTop: '16px'\r\n        }}>\r\n          <Card style={{\r\n            width: '100%'\r\n          }}>\r\n            <Card.Header>Restaurant Details</Card.Header>\r\n            <Card.Body>\r\n              <Tabs defaultActiveKey=\"general\" id=\"uncontrolled-tab-example\">\r\n                <Tab style={{\r\n                  padding: '16px'\r\n                }} eventKey=\"general\" title=\"General\">\r\n                  <p>Cuisines: {Cuisines}</p>\r\n                  {/* Some restaurants don't have price value, so don't display if this is the case */}\r\n                  <p>\r\n                    {displayPrice()}\r\n                  </p>\r\n                  <p>Rating: {displayRating()} {restaurant.review_count} reviews</p>\r\n                  <a variant=\"outline-primary\" target=\"_blank\" rel=\"noopener noreferrer\" href={restaurant.url}><Button variant=\"outline-primary\">Yelp Link</Button></a>\r\n                </Tab>\r\n                <Tab style={{\r\n                  padding: '16px'\r\n                }} eventKey=\"address\" title=\"Address/Contact\">\r\n                  <p><MdLocationOn color=\"#e53935\" /> {restaurant.location.address1 !== \"\" ? `${restaurant.location.address1}, ${restaurant.location.city}, ${restaurant.location.state} ${restaurant.location.zip_code}` : `${restaurant.location.city}, ${restaurant.location.state} ${restaurant.location.zip_code}`}</p>\r\n                  <p><MdLocalPhone color=\"#e53935\" /> <a href={`tel:${restaurant.phone}`}>{restaurant.display_phone}</a></p>\r\n                </Tab>\r\n                <Tab style={{\r\n                  padding: '16px'\r\n                }} eventKey=\"hours\" title=\"Open Hours\">\r\n                  <p>{displayHours()}</p>\r\n                </Tab>\r\n              </Tabs>\r\n\r\n            </Card.Body>\r\n          </Card>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: `${MAPS_API_KEY}`\r\n})(Details);","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport HomePage from './components/HomePage';\nimport Details from './components/Details';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nfunction App() {\n\n  return (\n  // Define the path and what component to use at the path using routes\n    <Router>\n      <Switch>\n        <Route path=\"/details\">\n          <Details />\n        </Route>\n\n        <Route path=\"/\">\n          <HomePage />\n        </Route>\n\n      </Switch>\n    </Router>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}